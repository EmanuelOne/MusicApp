{"version":3,"sources":["MusicApp/conponents/playerControlls.jsx","MusicApp/conponents/PlayerDetail.jsx","MusicApp/conponents/Player.js","MusicApp/App.jsx","MusicApp/conponents/Items.js","MusicApp/Play.jsx","index.js"],"names":["PlayerControlls","isPlaying","setIsPlaying","skipSong","song","className","onClick","icon","faBackward","pre","faPause","faPlay","faForward","PlayerDetail","src","process","img_src","alt","title","artist","Player","songs","nextSongIndex","currentsongIndex","setCurrentSongIndex","audioEl","useRef","useState","useEffect","current","play","console","log","pause","ref","forward","temp","length","App","setNextSongIndex","Items","setBool","map","e","i","key","Data","arr","newArr","rand","Math","floor","random","shuffle","Header","faMusic","Home","bool","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a1ea397.chunk.js","sourcesContent":["import {\n  faBackward,\n  faForward,\n  faPause,\n  faPlay,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nconst PlayerControlls = ({ isPlaying, setIsPlaying, skipSong, song }) => {\n  return (\n    <div className=\"c-player--controls\">\n      <button\n        className=\"skip-btn\"\n        onClick={() => {\n          skipSong(false);\n        }}>\n        <FontAwesomeIcon icon={faBackward} />\n      </button>\n      <button\n        className=\"play-btn\"\n        onClick={() => {\n          setIsPlaying((pre) => !pre);\n        }}>\n        <FontAwesomeIcon icon={!isPlaying ? faPlay : faPause} />\n      </button>\n      <button\n        className=\"skip-btn\"\n        onClick={() => {\n          skipSong();\n        }}>\n        <FontAwesomeIcon icon={faForward} />\n      </button>\n    </div>\n  );\n};\n\nexport default PlayerControlls;\n","import React from \"react\";\nconst PlayerDetail = ({ song }) => {\n  return (\n    <div className=\"c-player--details\">\n      <div className=\"details-img\">\n        <img src={process.env.PUBLIC_URL + song.img_src} alt=\"\" />\n      </div>\n      <h3 className=\"details-title\">{song.title}</h3>\n      <h4 className=\"details-artist\">{song.artist}</h4>\n    </div>\n  );\n};\n\nexport default PlayerDetail;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport PlayerControlls from \"./playerControlls\";\nimport PlayerDetail from \"./PlayerDetail\";\nconst Player = ({\n  songs,\n  nextSongIndex,\n  currentsongIndex,\n  setCurrentSongIndex,\n}) => {\n  const audioEl = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    if (isPlaying) {\n      audioEl.current.play();\n      console.log(\"playing\");\n    } else audioEl.current.pause();\n  });\n  function skipSong(forward = true) {\n    if (forward) {\n      setCurrentSongIndex(() => {\n        let temp = currentsongIndex;\n        temp++;\n        if (temp > songs.length - 1) temp = 0;\n        return temp;\n      });\n    } else\n      setCurrentSongIndex(() => {\n        let temp = currentsongIndex;\n        temp--;\n        if (temp < 0) temp = 0;\n        return temp;\n      });\n  }\n  return (\n    <div className=\"player\">\n      <audio src={songs[currentsongIndex].src} ref={audioEl}></audio>\n      <h4>Playing now</h4>\n      <PlayerDetail song={songs[currentsongIndex]} />\n      <PlayerControlls\n        song={songs[currentsongIndex]}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        skipSong={skipSong}\n      />\n      <p>\n        <strong>Next Up:</strong>\n        {songs[nextSongIndex].title} by {songs[nextSongIndex].artist}\n      </p>\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useEffect, useState } from \"react\";\nimport Player from \"./conponents/Player\";\nimport \"./index.css\";\n\n// import \"./style.css\";\nconst App = ({\n  currentsongIndex,\n  setCurrentSongIndex,\n  nextSongIndex,\n  setNextSongIndex,\n  songs,\n}) => {\n  useEffect(() => {\n    setNextSongIndex(() => {\n      if (currentsongIndex + 1 > songs.length - 1) return 0;\n      else return currentsongIndex + 1;\n    });\n  }, [currentsongIndex]);\n  return (\n    <Player\n      songs={songs}\n      currentsongIndex={currentsongIndex}\n      setCurrentSongIndex={setCurrentSongIndex}\n      nextSongIndex={nextSongIndex}\n    />\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nconst Items = ({\n  setCurrentSongIndex,\n  setBool,\n  nextSongIndex,\n  setNextSongIndex,\n  songs,\n}) => {\n  return (\n    <div>\n      {songs.map((e, i) => {\n        return (\n          <button className=\"trans\" key={i}>\n            <div\n              className=\"item\"\n              onClick={() => {\n                if (songs.length - 1 === nextSongIndex) setNextSongIndex(0);\n                setCurrentSongIndex(i);\n                setBool((pre) => !pre);\n              }}>\n              <img src={e.img_src} alt=\"\" />\n              <div>\n                <p>{e.title}</p>\n                <p>{e.artist}</p>\n              </div>\n            </div>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Items;\n","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport Playit from \"./App\";\nimport Items from \"./conponents/Items\";\nimport data from \"./Musics.json\";\nimport data2 from \"./musicBank.json\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\nlet Data = [...data, ...data2];\nconst shuffle = (arr) => {\n  const newArr = [...arr];\n  for (let i = newArr.length - 1; i > 0; i--) {\n    const rand = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n  }\n  return newArr;\n};\nData = shuffle(Data);\nconst Header = ({ setBool }) => {\n  return (\n    <header>\n      <div>\n        <h2>V Music</h2>\n        <p>\n          <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon>\n        </p>\n      </div>\n      <nav>\n        <ul>\n          <li\n            onClick={() => {\n              setBool(false);\n            }}>\n            Home\n          </li>\n          <li\n            onClick={() => {\n              setBool(true);\n            }}>\n            Player\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nconst App = () => {\n  const Home = () => {\n    return (\n      <>\n        <main>\n          <Items\n            setCurrentSongIndex={setCurrentSongIndex}\n            setBool={setBool}\n            nextSongIndex={nextSongIndex}\n            setNextSongIndex={setNextSongIndex}\n            songs={songs}\n          />\n        </main>\n      </>\n    );\n  };\n  console.log(Data);\n  const [currentsongIndex, setCurrentSongIndex] = useState(0);\n  const [nextSongIndex, setNextSongIndex] = useState(currentsongIndex + 1);\n  const [songs] = useState(Data);\n\n  const [changeC, setChangeC] = useState(null);\n  const [bool, setBool] = useState(false);\n  function changeCurrent(v) {\n    setChangeC(v);\n  }\n  return (\n    <div>\n      <div className=\"App\">\n        <div className=\"c-player\">\n          <Header setBool={setBool} />\n          {bool ? (\n            <Playit\n              currentsongIndex={currentsongIndex}\n              setCurrentSongIndex={setCurrentSongIndex}\n              nextSongIndex={nextSongIndex}\n              setNextSongIndex={setNextSongIndex}\n              songs={songs}\n            />\n          ) : (\n            <Home />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./WeatherApp/App.jsx\";\n// import App from \"./React_Router/App\";\n// import App from \"./temp/App\";\n// import App from \"./MusicApp/Play\";\nimport App from \"./MusicApp/Play\";\n// import App from \"./QuizApp/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}